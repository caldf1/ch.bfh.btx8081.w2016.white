Results CS1 Task 02

Definitionen:

Benutzer = User = Spitaeler, Kliniken, usw.
Kunden = Customer = Gesundheitsbehoerden.
Bei "plan-driven" orientieren wir uns primaer am Modell Waterfall. 
-> = "spricht (eher) fuer"


Unsere Resultate aus der 1. Aufgabe:

Viele verschieden Benutzer mit verschiedenen Beduerfnissen und Zugangsrechten. -> "agile" oder "plan-driven"
Verschieden Kunden mit verschiedenen Beduerfnissen. -> "agile" oder "plan-driven"
Komplexes rechtliches Umfeld. -> "plan-driven"
Komplexe Softwarerequirements. -> "agile" oder "plan-driven"

Viele verschieden Erfolgsfaktoren:

-	Die richtigen Daten zur richtigen Zeit in der richtigen Form am richtigen Ort.
-	Erfuellung gesetzlicher Vorgaben/Rahmenbedingungen
-	User friendly, gute usability
-	Hohe Sicherheitsstandarts
-	Hohe Anforderungen an die Datenintegritaet
-	Vielseitige Moeglichkeiten zur Interoperabilitaet, zur Einbindung zukuenftiger Systeme oder in zukuentige Systeme
-	24/7 Support
-	Rueckverfolgbarkeit, Verstaendlichkeit

-> Eher "plan-drive", aber "agile" auch denkbar.



Unsere Benutzer und Kunden

Benutzer
Unsere Benutzer sind verschiedene Berufsgruppen aus dem Gesundheitswesen und deren Institutionen. 
Diese sind wenig vertraut mit dem Development-Prozess von Software. Dies wuerde eine 
Vorgehensweise nach "agile" schwierig gestalten und lange Einarbeitungszeiten wuerden das Projekt 
entsprechend verlaengern. Des weiteren unterscheiden sich die Beduerfnisse der verschiedenen 
Berufsgruppen und Institutionen stark und es muessten deswegen viele verschiedene Parteien am 
Prozess beteiligt werden. Dies erhoeht den Aufwand weiter. -> "plan-driven"

Kunden
Unser Kunde ist die Regierung. Genauer gesagt: Regierungsaemter, wie das Bundesamt für Gesundheit. 
Verantwortlichkeiten sowie Ansprechspersonen koennen sich ich Laufe des Projektes aendern. Des 
weiteren koennen politische Veraenderungen die Einstellung der Bundesaemter gegenueber dem Projekt 
aendern. Das bedingt, oder spricht stark dafuer, dass zu Beginn des Projekts eine klare Zielvereinbarung 
vertraglich festgehalten wird. Dies spricht, unserer Einschaetzung, nach stark für eine «plan-driven» 
Vorgehensweise. Wuerden wir ein Projekt ohne klare zeitliche und finanzielle Limiten mit einer 
Regierungsorganisation wie der NASA, die sich mit solchen Projekten auskennt, durchfuehren, waere eine 
Vorgehensweise nach "agile" durchaus denkbar. In Zusammenarbeit mit Gesundheitsbehoerden sehen 
wir das als problematisch. -> "plan-driven"


Team und Zeitrahmen

Team
Die Teamgroesse von 7 Personen spricht weder fuer, noch gegen, einen der Prozesse. Die Unerfahrenheit des Teams, 
in unserem Falle, spricht eher fuer "plan-driven". -> "plan-driven"

Zeitrahmen
Wir gehen davon aus, dass es sich um eine Projektausschreibung einer, oder mehrerer, Regierungsaemter
geht. Hierbei sind ueblicherweise strikte zeitliche Zielvorgaben vorhanden, teilweise sogar gesetzlich 
vorgeschrieben. Folglich muessen wir zu einem vorgegebenen Zeitpunkt eine funktionierende Software uebergeben. 
Dies spricht eher fuer "plan-driven" -> "plan-driven"

Weitere relevante Aspekte
Als einen der wichtigsten Aspekt sehen wir das vielfältige und komplizierte gesetzliche Umfeld. Dies ist 
auch eines der staerksten Argumente fuer eine «plan-driven» Vorgehensweise. Werden klare Bedingungen
vertraglich festgelegt, die vom Kunden als gesetzestreu betrachtet werden, koennen wir diese gemaess
Vorgaben erfuellen. Kontinuierliche «agile» Entwicklung, hin zu einem gesetzestreuen Produkt, koennte an
der teilweise schwierigen Definition und Interpretation von Gesetzen scheitern. -> "plan-driven"

Summary
Verschieden Entwicklungsschritte, wie beispielsweise die Entwicklung der Benutzeroberflaeche der Kunden,
werden sicherlich mehrere iterative Schritte verlangen. Dabei werden Benutzertests und Feedbacks eine
wichtige Rolle spielen. Man koennte also argumentieren, dass es sich streng genommen um einen 
Hybridprozess handeln wird. Trotzdem tendieren wir klar zu einer Vorgehensweise nach "plan-driven".
Das reale Projekt währe also «plan-driven», wobei einige Zwischenschritte auch Elemente von "agile" hätten.


Gegenueberstellung agile vs plan-driven

agile:		Inkrementelles Werte- und Risikomanagement
plan-driven:	Abgestuftes Konzept, bei dem man versucht, bereits am Beginn alles zu wissen. 

Wir stufen hier die klare Definition zu beginn zu Gunsten eines klaren Vertrages als wichtiger ein,
also eher plan-driven.


agile		Veraenderungen werden gefoerdert.
plan-driven	Veraenderungen werden verhindert.

Ebenfalls, aus Gruenden der Vertragssicherheit und zur Termineinhaltung, eher plan-driven.
 

agile:		Fruehe Prototypen fruehes Scheitern.
plan-driven:	Spaete Prototypen spaetes Scheitern.

Hier sind die Vorteile von agile am eindeutigsten, also eher agile.


agile:		Transparenz
plan-driven:	Detaillierter Plan, staendige Kontrolle.

Der Vorteil eines detaillierten Plans ueberwiegt bei unserem Projekt, unserer Einschaetzung nach. Plan-driven


agile:		Analysieren und Anpassen.
plan-driven:	Zwischenergebnisse, kontrollierte Vorgehensweise, definitive Antwort.

Die kontrollierte Vorgehensweise scheint besser zu unserem Projekt zu passen, die definitive Antwort, im Sinne einer 
klaren Zielvorgabe, ebenfalls. Plan-driven.

agile:		Selbstmanagement
plan-driven:	Strikte hierarchische Kontrolle

Hier sehen wir keinen klaren Sieger.


agile:		Kontinuierliches Lernen
plan-driven:	Lernprozesse sekundaer zu Abgabetermin.

Da wir bei unserem Projekt mit einem strikten Abgabetermin rechnen, plan-driven.

Bei der Gegenueberstellung von agile und plan-driven im Team hat sich plan-driven durchgesetzt.
